# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
        
#     - name: Build with Maven
#       run: mvn clean package
#       run: mvn -B install --file mirage-generate-0.0.1-SNAPSHOT.jar
           
      
#     - name: Build with Maven 2
#       run: mvn -B install --file mirage-generate-0.0.1-SNAPSHOT/META-INF/maven/com.blorecomp.server.version1.serverversion1/mirage-generate/pom.xml
    
    
    - name: pwd
      run: |
       pwd
       
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}   
          
    - name: copy file via ssh key
      uses: appleboy/ssh-action@master
      env:
        HOST: 3.6.91.95
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
        source: "mirage-search-0.0.1-SNAPSHOT.jar"
        target: "/home/runner/work/Tadvaya/Tadvaya"
    
#     - name: Run jar file
#       run: |
#         java -jar mirage-generate-0.0.1-SNAPSHOT.jar
        
    - name: Run a generate script on remote server (start the application)
      if: always()
      uses: actions/upload-artifact@v1
      env:
        HOST: 3.6.91.95
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      with:
#         command: |
#           cd /home/ubuntu/ && java -jar mirage-generate-0.0.1-SNAPSHOT.jar &
        name: ‘mirage-generate-0.0.1-SNAPSHOT.jar'
        path: '/home/runner/work/Tadvaya/Tadvaya'
        
    - name: Run a search script on remote server (start the application)
      if: always()
      uses: actions/upload-artifact@v1
      with:
#         command: |
#           cd /home/runner/work/Tadvaya/Tadvaya && java -jar mirage-search-0.0.1-SNAPSHOT.jar &
        name: ‘mirage-search-0.0.1-SNAPSHOT.jar'
        path: '/home/runner/work/Tadvaya/Tadvaya'
        
#     - name: Run a script on remote server (start the application)
#       if: always()
#       uses: actions/upload-artifact@v2-preview
#       with:
#         command: |
#           cd /home/ubuntu/ && java -jar mirage-generate-0.0.1-SNAPSHOT.jar &
#         HOST: ${{ secrets.HOST }}
#         USER: ${{ secrets.SSH_USER }}
#         KEY: ${{ secrets.SSH_PRIVATE_KEY }}
#         args: "-tt"
    
#     - name: Build artifact
#       uses: actions/upload-artifact@v2
#       with:
#         name: my-artifact
#         path: "mirage-search-0.0.1-SNAPSHOT.jar"
#         source: "mirage-search-0.0.1-SNAPSHOT.jar"
#         target: "/home/ubuntu"
#         host: ${{ secrets.HOSTS }}
#         user: ${{ secrets.SSH_USER }}
#         key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    
    
